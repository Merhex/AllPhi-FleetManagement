@page "/fleet/details/{chassisNumber}"

<Heading Size="HeadingSize.Is1">Motor vehicle details</Heading>
<Button Clicked="@ReturnToFleet">
    <Blazorise.Icons.FontAwesome.Icon Name="FontAwesomeIcons.Backward" />
    Return to main fleet page.
</Button>
<Divider />

<Loader Loading="@IsLoading">
    <Container Fluid="true">
        <Fields>
            <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                <FieldLabel>Brand</FieldLabel>
                <TextEdit @bind-Text="@MotorVehicleDetailed.Brand"
                          Disabled="@Disabled" />
            </Field>
            <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                <FieldLabel>Model</FieldLabel>
                <TextEdit @bind-Text="@MotorVehicleDetailed.Model"
                          Disabled="@Disabled" />
            </Field>
            <Field ColumnSize="ColumnSize.Is5.OnDesktop.IsFull.OnTablet">
                <FieldLabel>VIN</FieldLabel>
                <TextEdit Text="@MotorVehicleDetailed.ChassisNumber"
                          Disabled="true" />
            </Field>
            <Field ColumnSize="ColumnSize.Is4.OnDesktop.IsFull.OnTablet">
                <FieldLabel>Body</FieldLabel>
                <Select TValue="int"
                        @bind-SelectedValue="@MotorVehicleDetailed.BodyType"
                        Disabled="@Disabled">
                    <SelectItem Value="0">Sedan</SelectItem>
                    <SelectItem Value="1">SUV</SelectItem>
                    <SelectItem Value="2">Hatchback</SelectItem>
                    <SelectItem Value="3">Roadster</SelectItem>
                    <SelectItem Value="4">Pickup</SelectItem>
                    <SelectItem Value="5">Van</SelectItem>
                    <SelectItem Value="6">Coupe</SelectItem>
                    <SelectItem Value="7">Truck</SelectItem>
                    <SelectItem Value="8">Other</SelectItem>
                </Select>
            </Field>
            <Field ColumnSize="ColumnSize.Is4.OnDesktop.IsFull.OnTablet">
                <FieldLabel>Propulsion</FieldLabel>
                <Select TValue="int"
                        @bind-SelectedValue="@MotorVehicleDetailed.PropulsionType"
                        Disabled="@Disabled">
                    <SelectItem Value="0">Gasoline</SelectItem>
                    <SelectItem Value="1">Diesel</SelectItem>
                    <SelectItem Value="2">Electric</SelectItem>
                    <SelectItem Value="3">Hybrid Gasoline</SelectItem>
                    <SelectItem Value="4">Hybrid Diesel</SelectItem>
                    <SelectItem Value="5">Other</SelectItem>
                </Select>
            </Field>
            <Field ColumnSize="ColumnSize.Is2.OnDesktop.IsFull.OnTablet" Margin="Margin
                                                                                 .Is4.FromLeft.OnDesktop
                                                                                 .IsAuto">
                <Switch TValue="bool"
                        @bind-Checked="@MotorVehicleDetailed.Operational"
                        Disabled="@Disabled"
                        Size="Size.Medium">Operational</Switch>
            </Field>
            <Field Margin="Margin.IsAuto.OnDesktop.Is3.OnY.OnMobile">
                <Buttons>
                    <Button Clicked="@(() => UpdateButtonShown = !UpdateButtonShown)"
                            Color="Color.Info">
                        Edit
                    </Button>
                    @if (UpdateButtonShown)
                    {
                        <Button Clicked="@UpdateMotorVehicle"
                                Type="ButtonType.Submit"
                                PreventDefaultOnSubmit="true"
                                Color="Color.Warning">
                            Update
                        </Button>
                    }
                </Buttons>
            </Field>
        </Fields>

        <Divider />

        <Container Fluid="true">
            <Heading Size="HeadingSize.Is2">License plates on vehicle</Heading>
            @if (AddLicensePlateShown)
            {
                <Fields>
                    <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                        <FieldLabel>License plate identifier</FieldLabel>
                            <TextEdit MaskType="MaskType.RegEx" EditMask="[A-Z-0-9.]{1,9}"
                                      @bind-Text="@LicensePlateToBeAssigned" />
                    </Field>
                    <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                        <Button Color="Color.Info"
                                Margin="Margin.Is4.OnY.OnDesktop.Is2.OnY.OnMobile"
                                Clicked="@AssignLicensePlate"
                                Loading="@IsAssigningLicensePlate"
                                Disabled="@IsAssigningLicensePlate"
                                Type="ButtonType.Submit">
                            Add
                        </Button>
                        <Button Color="Color.Warning"
                                Margin="Margin.Is4.OnY.OnDesktop.Is2.OnY.OnMobile"
                                Clicked="@(() => AddLicensePlateShown = !AddLicensePlateShown)">
                            Cancel
                        </Button>
                    </Field>
                </Fields>
            }
            else
            {
                <Button Clicked="@(() => AddLicensePlateShown = !AddLicensePlateShown)"
                        Margin="Margin.IsAuto.OnDesktop.Is3.OnY.OnMobile">
                    <Blazorise.Icon Name="FontAwesomeIcons.Plus" />
                    Assign license plate
                </Button>
            }

            @if (MotorVehicleDetailed.LicensePlates.Any())
            {
        <Table Margin="Margin.Is4.FromTop.OnDesktop.Is2.OnMobile">
            <TableHeader ThemeContrast="ThemeContrast.Light">
                <TableRow>
                    <TableHeaderCell>Active</TableHeaderCell>
                    <TableHeaderCell>Identifier</TableHeaderCell>
                </TableRow>
            </TableHeader>
                @if (InChangeStatusOperation is false)
                {
                    @foreach (var licensePlate in MotorVehicleDetailed.LicensePlates)
                    {
                        <TableRow Color="@LicensePlateTableRowColor">
                            <TableRowHeader>
                                <Check TValue="bool" Checked="@licensePlate.InUse" Disabled="@InChangeStatusOperation" CheckedChanged="@((value) => ChangeLicensePlateStatus(value, licensePlate))"></Check>
                            </TableRowHeader>
                            <TableRowCell>
                                <Button Color="Color.Danger" Outline="true" Clicked="@(() => LicensePlateHistoryPage(licensePlate.Identifier))">@licensePlate.Identifier</Button>
                            </TableRowCell>
                        </TableRow>
                    }
                }
                else
                {
                    <Loader/>
                }
        </Table>
            }
            else
            {
                <Paragraph>This vehicle does not have any license plates assigned.</Paragraph>
            }
        </Container>

        <Divider />

        <Container Fluid="true">
            <Heading Size="HeadingSize.Is2">Mileage history</Heading>
            @if (MileageAddShown)
            {
                <Fields>
                    <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                        <FieldLabel>Mileage</FieldLabel>
                        <NumericEdit
                                  @bind-Value="@MileageSnapshotValue"
                                  Max="1000000"
                                  Min="0"/>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                        <FieldLabel>Date of mileage</FieldLabel>
                        <DateEdit TValue="DateTime"
                                  @bind-Date="@MileageSnapshotDate" />
                    </Field>
                    <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
                        <Button Color="Color.Info"
                                Margin="Margin.Is4.OnY.OnDesktop.Is2.OnY.OnMobile"
                                Clicked="@AddMileageSnapshot"
                                Loading="@IsAddingMileage"
                                Disabled="@IsAddingMileage"
                                Type="ButtonType.Submit">
                            Add
                        </Button>
                        <Button Color="Color.Warning"
                                Margin="Margin.Is4.OnY.OnDesktop.Is2.OnY.OnMobile"
                                Clicked="@(() => MileageAddShown = !MileageAddShown)">
                            Cancel
                        </Button>
                    </Field>
                </Fields>
            }
            else
            {
                <Button 
                        Clicked="@(() => MileageAddShown = !MileageAddShown)" 
                        Margin="Margin.IsAuto.OnDesktop.Is3.OnY.OnMobile">
                    <Blazorise.Icon Name="FontAwesomeIcons.Plus" />
                    Add new mileage
                </Button>
            }

            @if (MotorVehicleDetailed.MileageHistory.Any())
            {
                <Card Margin="Margin.Is4.OnY">
                    <CardHeader>
                        Every point represents the date when mileage was reported, and the respective mileage.
                    </CardHeader>
                    <CardBody>
                        <LineChart @ref="MileageChart" TItem="double" />
                    </CardBody>
                </Card>
            }
            else
            {
                <Paragraph>There are currently no mileage reports for this vehicle.</Paragraph>
            }
        </Container>
    </Container>

    <SnackbarStack @ref="SnackbarStack" Location="SnackbarStackLocation.Center" Interval="10000" Multiline="true" />
</Loader>