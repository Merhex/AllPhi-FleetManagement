@page "/licensePlates/"
@using FleetManagement.Blazor.Responses
@using FleetManagement.Blazor.Filters

<Heading Margin="Margin.Is2" Display="Display.Inline">License plates</Heading>

<Divider />

<Bar Mode="BarMode.Horizontal"
     Breakpoint="Breakpoint.None"
     ThemeContrast="ThemeContrast.None"
     Visible="@FilterIsVisible"
     Padding="Padding.Is0"
     Margin="Margin.Is2.FromBottom">

    <BarBrand>
        <BarLink Clicked="@(() => FilterIsVisible = !FilterIsVisible)">
            <BarItem>
                <BarIcon IconName="FontAwesomeIcons.Filter" />
            </BarItem>
            Filter
        </BarLink>
    </BarBrand>

    <BarMenu>
        <BarStart>
            <BarItem>
                <Row Gutter="(32, 16)">
                    <Column ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnMobile">
                        <Addons>
                            <Addon AddonType="AddonType.Start">
                                <AddonLabel>Identifier</AddonLabel>
                            </Addon>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit Placeholder="X-XXX-X"
                                          @bind-Text="@LicensePlateFilter.Identifier" />
                            </Addon>
                        </Addons>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnMobile">
                        <Field Margin="Margin.Is4.FromLeft.OnDesktop.IsAuto">
                            <Select TValue="ActivityFilterSelect" @bind-SelectedValue="@LicensePlateFilter.InUse">
                                <SelectItem TValue="ActivityFilterSelect" Value="ActivityFilterSelect.Active">Active</SelectItem>
                                <SelectItem TValue="ActivityFilterSelect" Value="ActivityFilterSelect.Inactive">Inactive</SelectItem>
                                <SelectItem TValue="ActivityFilterSelect" Value="ActivityFilterSelect.All">All</SelectItem>
                            </Select>
                        </Field>
                    </Column>
                </Row>
            </BarItem>
        </BarStart>
        <BarEnd Margin="Margin.Is2.FromTop">
            <BarItem>
                <Buttons Margin="Margin.IsAuto.OnDesktop.Is2.OnMobile">
                    <Button Color="Color.Primary"
                            Clicked="@ApplyFilter"
                            Disabled="@DataLoading"
                            Loading="@DataLoading">
                        Apply filter
                    </Button>
                    <Button Color="Color.Secondary"
                            Clicked="@ClearFilter"
                            Disabled="@DataLoading">
                        Clear filter
                    </Button>
                </Buttons>
            </BarItem>
        </BarEnd>
    </BarMenu>
</Bar>

<Container Fluid="true">
@if (AddLicensePlateShown)
{
    <Fields>
        <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnMobile">
            <FieldLabel>License plate identifier</FieldLabel>
            <TextEdit @bind-Text="@AddLicensePlateIdentifier" />
        </Field>
        <Field ColumnSize="ColumnSize.Is3.OnDesktop.IsFull.OnTablet">
            <Button Color="Color.Info"
                    Clicked="@AddLicensePlate"
                    Loading="@IsAddingLicensePlate"
                    Disabled="@IsAddingLicensePlate"
                    Type="ButtonType.Submit">
                Add
            </Button>
            <Button Color="Color.Warning"
                    Clicked="@(() => AddLicensePlateShown = !AddLicensePlateShown)">
                Cancel
            </Button>
        </Field>
    </Fields>
}
else
{
    <Button Clicked="@(() => AddLicensePlateShown = !AddLicensePlateShown)"
            Margin="Margin.IsAuto.OnDesktop.Is3.OnY.OnMobile">
        <Blazorise.Icon Name="FontAwesomeIcons.Plus" />
        Add new license plate
    </Button>
}
</Container>

<DataGrid TItem="LicensePlateResponse"
          Data="@LicensePlatesItems"
          ReadData="@ReadData"
          TotalItems="@LicensePlatesTotal"
          PageSize="@PageSize"
          CurrentPage="@Page"
          ShowPager="true">
    <ChildContent>
        <DataGridColumn Direction="@IdentifierSortDirection" TItem="LicensePlateResponse" Field="@nameof(LicensePlateResponse.Identifier)" Caption="Identifier">
            <DisplayTemplate>
                <Button Color="Color.Danger" Outline="true" Clicked="@(() => LicensePlateHistoryPage(context.Identifier))">@context.Identifier</Button>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridCheckColumn Direction="@InUseDirection" TItem="LicensePlateResponse" Field="@nameof(LicensePlateResponse.InUse)" Sortable="false" Caption="Active">
            <DisplayTemplate>
                <Check TValue="bool" Checked="context.InUse" Disabled="@InChangeStatusOperation" CheckedChanged="@((value) => ChangeLicensePlateStatus(value, context))" />
            </DisplayTemplate>
        </DataGridCheckColumn>
    </ChildContent>
    <EmptyTemplate>
        <Paragraph>No items to be displayed.</Paragraph>
    </EmptyTemplate>
    <LoadingTemplate>
        <Loader />
    </LoadingTemplate>
</DataGrid>

<SnackbarStack @ref="SnackbarStack" Location="SnackbarStackLocation.Center" Interval="10000" Multiline="true" />
